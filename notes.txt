Creating user Authentication and utilizing tokens


----> pip install pydantic[email]
For email validator 

---------------------------------------


---> pip install python-multipart 
    ------------------------------

-> to handle form data in multipart/form-data format.

🔍 Why is it needed?
When you accept data from:

HTML forms (e.g., <form enctype="multipart/form-data">)

File uploads (like images, PDFs)

FastAPI needs python-multipart under the hood to parse those types of requests.

//Use python-multipart when you're dealing with form submissions or file uploads in FastAPI.


-----------------------------------------------------------

--->  pip install python-jose[cryptography]
    --------------------------------------------------

It’s a Python library for handling:

JWTs (JSON Web Tokens)

JWS (JSON Web Signature)

JWE (JSON Web Encryption)
and more — all under the JOSE (JavaScript Object Signing and Encryption) standards.

 to safely and efficiently handle JWTs in FastAPI apps (or anywhere you need secure token authentication).


 ---------------------------------------------------------------------------------------------------------------------


---> pip install passlib[bcrypt]
    -----------------------------

installs the passlib library along with the bcrypt hashing algorithm.
passlib is a powerful Python library used for secure password hashing. It supports many algorithms like:

bcrypt ✅

argon2

pbkdf2_sha256

sha256_crypt, etc.


In Short : ...to hash passwords securely in Python, especially when working with FastAPI user authentication systems.



-----------------------------------------------------------------------------------------------------------------------------------

Ok so in authentication, basically password encrption a secret key is used to generate it run : 

openssl rand -hex 32   -> on terminal

OR 

import secrets

secret_key = secrets.token_urlsafe(32)
print(secret_key)


